// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package deaggregator

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Configuration_ThreadConfig int32

const (
	Configuration_PER_REQUEST Configuration_ThreadConfig = 0
	Configuration_POOLED      Configuration_ThreadConfig = 1
)

var Configuration_ThreadConfig_name = map[int32]string{
	0: "PER_REQUEST",
	1: "POOLED",
}
var Configuration_ThreadConfig_value = map[string]int32{
	"PER_REQUEST": 0,
	"POOLED":      1,
}

func (x Configuration_ThreadConfig) Enum() *Configuration_ThreadConfig {
	p := new(Configuration_ThreadConfig)
	*p = x
	return p
}
func (x Configuration_ThreadConfig) String() string {
	return proto.EnumName(Configuration_ThreadConfig_name, int32(x))
}
func (x *Configuration_ThreadConfig) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Configuration_ThreadConfig_value, data, "Configuration_ThreadConfig")
	if err != nil {
		return err
	}
	*x = Configuration_ThreadConfig(value)
	return nil
}
func (Configuration_ThreadConfig) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_config_788a82bbad66cc53, []int{1, 0}
}

type AdditionalDimension struct {
	Key                  *string  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	Granularity          *string  `protobuf:"bytes,3,req,name=granularity" json:"granularity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdditionalDimension) Reset()         { *m = AdditionalDimension{} }
func (m *AdditionalDimension) String() string { return proto.CompactTextString(m) }
func (*AdditionalDimension) ProtoMessage()    {}
func (*AdditionalDimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_788a82bbad66cc53, []int{0}
}
func (m *AdditionalDimension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdditionalDimension.Unmarshal(m, b)
}
func (m *AdditionalDimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdditionalDimension.Marshal(b, m, deterministic)
}
func (dst *AdditionalDimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdditionalDimension.Merge(dst, src)
}
func (m *AdditionalDimension) XXX_Size() int {
	return xxx_messageInfo_AdditionalDimension.Size(m)
}
func (m *AdditionalDimension) XXX_DiscardUnknown() {
	xxx_messageInfo_AdditionalDimension.DiscardUnknown(m)
}

var xxx_messageInfo_AdditionalDimension proto.InternalMessageInfo

func (m *AdditionalDimension) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *AdditionalDimension) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func (m *AdditionalDimension) GetGranularity() string {
	if m != nil && m.Granularity != nil {
		return *m.Granularity
	}
	return ""
}

type Configuration struct {
	AdditionalMetricDims  []*AdditionalDimension      `protobuf:"bytes,128,rep,name=additional_metric_dims,json=additionalMetricDims" json:"additional_metric_dims,omitempty"`
	AggregationEnabled    *bool                       `protobuf:"varint,1,opt,name=aggregation_enabled,json=aggregationEnabled,def=1" json:"aggregation_enabled,omitempty"`
	AggregationMaxCount   *uint64                     `protobuf:"varint,2,opt,name=aggregation_max_count,json=aggregationMaxCount,def=4294967295" json:"aggregation_max_count,omitempty"`
	AggregationMaxSize    *uint64                     `protobuf:"varint,3,opt,name=aggregation_max_size,json=aggregationMaxSize,def=51200" json:"aggregation_max_size,omitempty"`
	CloudwatchEndpoint    *string                     `protobuf:"bytes,4,opt,name=cloudwatch_endpoint,json=cloudwatchEndpoint,def=" json:"cloudwatch_endpoint,omitempty"`
	CloudwatchPort        *uint64                     `protobuf:"varint,5,opt,name=cloudwatch_port,json=cloudwatchPort,def=443" json:"cloudwatch_port,omitempty"`
	CollectionMaxCount    *uint64                     `protobuf:"varint,6,opt,name=collection_max_count,json=collectionMaxCount,def=500" json:"collection_max_count,omitempty"`
	CollectionMaxSize     *uint64                     `protobuf:"varint,7,opt,name=collection_max_size,json=collectionMaxSize,def=5242880" json:"collection_max_size,omitempty"`
	ConnectTimeout        *uint64                     `protobuf:"varint,8,opt,name=connect_timeout,json=connectTimeout,def=6000" json:"connect_timeout,omitempty"`
	EnableCoreDumps       *bool                       `protobuf:"varint,9,opt,name=enable_core_dumps,json=enableCoreDumps,def=0" json:"enable_core_dumps,omitempty"`
	FailIfThrottled       *bool                       `protobuf:"varint,10,opt,name=fail_if_throttled,json=failIfThrottled,def=0" json:"fail_if_throttled,omitempty"`
	KinesisEndpoint       *string                     `protobuf:"bytes,11,opt,name=kinesis_endpoint,json=kinesisEndpoint,def=" json:"kinesis_endpoint,omitempty"`
	KinesisPort           *uint64                     `protobuf:"varint,12,opt,name=kinesis_port,json=kinesisPort,def=443" json:"kinesis_port,omitempty"`
	LogLevel              *string                     `protobuf:"bytes,13,opt,name=log_level,json=logLevel,def=info" json:"log_level,omitempty"`
	MaxConnections        *uint64                     `protobuf:"varint,14,opt,name=max_connections,json=maxConnections,def=24" json:"max_connections,omitempty"`
	MetricsGranularity    *string                     `protobuf:"bytes,15,opt,name=metrics_granularity,json=metricsGranularity,def=shard" json:"metrics_granularity,omitempty"`
	MetricsLevel          *string                     `protobuf:"bytes,16,opt,name=metrics_level,json=metricsLevel,def=detailed" json:"metrics_level,omitempty"`
	MetricsNamespace      *string                     `protobuf:"bytes,17,opt,name=metrics_namespace,json=metricsNamespace,def=KinesisProducerLibrary" json:"metrics_namespace,omitempty"`
	MetricsUploadDelay    *uint64                     `protobuf:"varint,18,opt,name=metrics_upload_delay,json=metricsUploadDelay,def=60000" json:"metrics_upload_delay,omitempty"`
	MinConnections        *uint64                     `protobuf:"varint,19,opt,name=min_connections,json=minConnections,def=1" json:"min_connections,omitempty"`
	RateLimit             *uint64                     `protobuf:"varint,20,opt,name=rate_limit,json=rateLimit,def=150" json:"rate_limit,omitempty"`
	RecordMaxBufferedTime *uint64                     `protobuf:"varint,21,opt,name=record_max_buffered_time,json=recordMaxBufferedTime,def=100" json:"record_max_buffered_time,omitempty"`
	RecordTtl             *uint64                     `protobuf:"varint,22,opt,name=record_ttl,json=recordTtl,def=30000" json:"record_ttl,omitempty"`
	Region                *string                     `protobuf:"bytes,23,opt,name=region,def=" json:"region,omitempty"`
	RequestTimeout        *uint64                     `protobuf:"varint,24,opt,name=request_timeout,json=requestTimeout,def=6000" json:"request_timeout,omitempty"`
	VerifyCertificate     *bool                       `protobuf:"varint,25,opt,name=verify_certificate,json=verifyCertificate,def=1" json:"verify_certificate,omitempty"`
	ThreadConfig          *Configuration_ThreadConfig `protobuf:"varint,26,opt,name=thread_config,json=threadConfig,enum=aws.kinesis.protobuf.Configuration_ThreadConfig,def=0" json:"thread_config,omitempty"`
	ThreadPoolSize        *uint32                     `protobuf:"varint,27,opt,name=thread_pool_size,json=threadPoolSize,def=64" json:"thread_pool_size,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                    `json:"-"`
	XXX_unrecognized      []byte                      `json:"-"`
	XXX_sizecache         int32                       `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_788a82bbad66cc53, []int{1}
}
func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (dst *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(dst, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

const Default_Configuration_AggregationEnabled bool = true
const Default_Configuration_AggregationMaxCount uint64 = 4294967295
const Default_Configuration_AggregationMaxSize uint64 = 51200
const Default_Configuration_CloudwatchPort uint64 = 443
const Default_Configuration_CollectionMaxCount uint64 = 500
const Default_Configuration_CollectionMaxSize uint64 = 5242880
const Default_Configuration_ConnectTimeout uint64 = 6000
const Default_Configuration_EnableCoreDumps bool = false
const Default_Configuration_FailIfThrottled bool = false
const Default_Configuration_KinesisPort uint64 = 443
const Default_Configuration_LogLevel string = "info"
const Default_Configuration_MaxConnections uint64 = 24
const Default_Configuration_MetricsGranularity string = "shard"
const Default_Configuration_MetricsLevel string = "detailed"
const Default_Configuration_MetricsNamespace string = "KinesisProducerLibrary"
const Default_Configuration_MetricsUploadDelay uint64 = 60000
const Default_Configuration_MinConnections uint64 = 1
const Default_Configuration_RateLimit uint64 = 150
const Default_Configuration_RecordMaxBufferedTime uint64 = 100
const Default_Configuration_RecordTtl uint64 = 30000
const Default_Configuration_RequestTimeout uint64 = 6000
const Default_Configuration_VerifyCertificate bool = true
const Default_Configuration_ThreadConfig Configuration_ThreadConfig = Configuration_PER_REQUEST
const Default_Configuration_ThreadPoolSize uint32 = 64

func (m *Configuration) GetAdditionalMetricDims() []*AdditionalDimension {
	if m != nil {
		return m.AdditionalMetricDims
	}
	return nil
}

func (m *Configuration) GetAggregationEnabled() bool {
	if m != nil && m.AggregationEnabled != nil {
		return *m.AggregationEnabled
	}
	return Default_Configuration_AggregationEnabled
}

func (m *Configuration) GetAggregationMaxCount() uint64 {
	if m != nil && m.AggregationMaxCount != nil {
		return *m.AggregationMaxCount
	}
	return Default_Configuration_AggregationMaxCount
}

func (m *Configuration) GetAggregationMaxSize() uint64 {
	if m != nil && m.AggregationMaxSize != nil {
		return *m.AggregationMaxSize
	}
	return Default_Configuration_AggregationMaxSize
}

func (m *Configuration) GetCloudwatchEndpoint() string {
	if m != nil && m.CloudwatchEndpoint != nil {
		return *m.CloudwatchEndpoint
	}
	return ""
}

func (m *Configuration) GetCloudwatchPort() uint64 {
	if m != nil && m.CloudwatchPort != nil {
		return *m.CloudwatchPort
	}
	return Default_Configuration_CloudwatchPort
}

func (m *Configuration) GetCollectionMaxCount() uint64 {
	if m != nil && m.CollectionMaxCount != nil {
		return *m.CollectionMaxCount
	}
	return Default_Configuration_CollectionMaxCount
}

func (m *Configuration) GetCollectionMaxSize() uint64 {
	if m != nil && m.CollectionMaxSize != nil {
		return *m.CollectionMaxSize
	}
	return Default_Configuration_CollectionMaxSize
}

func (m *Configuration) GetConnectTimeout() uint64 {
	if m != nil && m.ConnectTimeout != nil {
		return *m.ConnectTimeout
	}
	return Default_Configuration_ConnectTimeout
}

func (m *Configuration) GetEnableCoreDumps() bool {
	if m != nil && m.EnableCoreDumps != nil {
		return *m.EnableCoreDumps
	}
	return Default_Configuration_EnableCoreDumps
}

func (m *Configuration) GetFailIfThrottled() bool {
	if m != nil && m.FailIfThrottled != nil {
		return *m.FailIfThrottled
	}
	return Default_Configuration_FailIfThrottled
}

func (m *Configuration) GetKinesisEndpoint() string {
	if m != nil && m.KinesisEndpoint != nil {
		return *m.KinesisEndpoint
	}
	return ""
}

func (m *Configuration) GetKinesisPort() uint64 {
	if m != nil && m.KinesisPort != nil {
		return *m.KinesisPort
	}
	return Default_Configuration_KinesisPort
}

func (m *Configuration) GetLogLevel() string {
	if m != nil && m.LogLevel != nil {
		return *m.LogLevel
	}
	return Default_Configuration_LogLevel
}

func (m *Configuration) GetMaxConnections() uint64 {
	if m != nil && m.MaxConnections != nil {
		return *m.MaxConnections
	}
	return Default_Configuration_MaxConnections
}

func (m *Configuration) GetMetricsGranularity() string {
	if m != nil && m.MetricsGranularity != nil {
		return *m.MetricsGranularity
	}
	return Default_Configuration_MetricsGranularity
}

func (m *Configuration) GetMetricsLevel() string {
	if m != nil && m.MetricsLevel != nil {
		return *m.MetricsLevel
	}
	return Default_Configuration_MetricsLevel
}

func (m *Configuration) GetMetricsNamespace() string {
	if m != nil && m.MetricsNamespace != nil {
		return *m.MetricsNamespace
	}
	return Default_Configuration_MetricsNamespace
}

func (m *Configuration) GetMetricsUploadDelay() uint64 {
	if m != nil && m.MetricsUploadDelay != nil {
		return *m.MetricsUploadDelay
	}
	return Default_Configuration_MetricsUploadDelay
}

func (m *Configuration) GetMinConnections() uint64 {
	if m != nil && m.MinConnections != nil {
		return *m.MinConnections
	}
	return Default_Configuration_MinConnections
}

func (m *Configuration) GetRateLimit() uint64 {
	if m != nil && m.RateLimit != nil {
		return *m.RateLimit
	}
	return Default_Configuration_RateLimit
}

func (m *Configuration) GetRecordMaxBufferedTime() uint64 {
	if m != nil && m.RecordMaxBufferedTime != nil {
		return *m.RecordMaxBufferedTime
	}
	return Default_Configuration_RecordMaxBufferedTime
}

func (m *Configuration) GetRecordTtl() uint64 {
	if m != nil && m.RecordTtl != nil {
		return *m.RecordTtl
	}
	return Default_Configuration_RecordTtl
}

func (m *Configuration) GetRegion() string {
	if m != nil && m.Region != nil {
		return *m.Region
	}
	return ""
}

func (m *Configuration) GetRequestTimeout() uint64 {
	if m != nil && m.RequestTimeout != nil {
		return *m.RequestTimeout
	}
	return Default_Configuration_RequestTimeout
}

func (m *Configuration) GetVerifyCertificate() bool {
	if m != nil && m.VerifyCertificate != nil {
		return *m.VerifyCertificate
	}
	return Default_Configuration_VerifyCertificate
}

func (m *Configuration) GetThreadConfig() Configuration_ThreadConfig {
	if m != nil && m.ThreadConfig != nil {
		return *m.ThreadConfig
	}
	return Default_Configuration_ThreadConfig
}

func (m *Configuration) GetThreadPoolSize() uint32 {
	if m != nil && m.ThreadPoolSize != nil {
		return *m.ThreadPoolSize
	}
	return Default_Configuration_ThreadPoolSize
}

func init() {
	proto.RegisterType((*AdditionalDimension)(nil), "aws.kinesis.protobuf.AdditionalDimension")
	proto.RegisterType((*Configuration)(nil), "aws.kinesis.protobuf.Configuration")
	proto.RegisterEnum("aws.kinesis.protobuf.Configuration_ThreadConfig", Configuration_ThreadConfig_name, Configuration_ThreadConfig_value)
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_788a82bbad66cc53) }

var fileDescriptor_config_788a82bbad66cc53 = []byte{
	// 916 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x54, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0xad, 0xf2, 0xd5, 0x98, 0x71, 0x6c, 0x87, 0x76, 0x32, 0x6e, 0x7b, 0xf1, 0x82, 0x61, 0xf0,
	0x96, 0xd6, 0x50, 0x1c, 0x3b, 0x6d, 0x82, 0x62, 0xc0, 0x1a, 0x1b, 0xc3, 0xb0, 0x64, 0xcd, 0x58,
	0xf7, 0x65, 0x2f, 0x1a, 0x2d, 0x5d, 0x39, 0x44, 0x29, 0xd2, 0xa3, 0xa8, 0x34, 0xce, 0xd3, 0xb0,
	0x5f, 0x3e, 0x88, 0x94, 0x6d, 0x39, 0xc8, 0x9b, 0x74, 0xcf, 0x39, 0xf7, 0x8b, 0x87, 0x44, 0xd5,
	0x50, 0xc9, 0x98, 0x4f, 0xbb, 0x33, 0xad, 0x8c, 0xc2, 0x2d, 0xf6, 0x25, 0xed, 0x7e, 0xe6, 0x12,
	0x52, 0x9e, 0xba, 0xd0, 0x24, 0x8b, 0x8f, 0x03, 0xd4, 0xfc, 0x25, 0x8a, 0xb8, 0xe1, 0x4a, 0x32,
	0x31, 0xe4, 0x09, 0xc8, 0x94, 0x2b, 0x89, 0x1b, 0x68, 0xf3, 0x33, 0xcc, 0x89, 0xd7, 0xde, 0xe8,
	0x54, 0x68, 0xfe, 0x89, 0x5b, 0x68, 0xfb, 0x9e, 0x89, 0x0c, 0xc8, 0x86, 0x8d, 0xb9, 0x1f, 0xdc,
	0x46, 0x7b, 0x53, 0xcd, 0x64, 0x26, 0x98, 0xe6, 0x66, 0x4e, 0x36, 0x2d, 0x56, 0x0e, 0x1d, 0xff,
	0x57, 0x45, 0xfb, 0x57, 0xb6, 0x8f, 0x4c, 0xb3, 0xbc, 0x0c, 0xfe, 0x1b, 0x1d, 0xb1, 0x65, 0xc9,
	0x20, 0x01, 0xa3, 0x79, 0x18, 0x44, 0x3c, 0x49, 0xc9, 0xbf, 0x5e, 0x7b, 0xb3, 0xb3, 0xd7, 0xfb,
	0xb1, 0xfb, 0x5c, 0xab, 0xdd, 0x67, 0xfa, 0xa4, 0xad, 0x55, 0xa6, 0x1b, 0x9b, 0x68, 0xc8, 0x93,
	0x14, 0x0f, 0x50, 0x93, 0x4d, 0xa7, 0x1a, 0xa6, 0xb6, 0x60, 0x00, 0x92, 0x4d, 0x04, 0x44, 0xc4,
	0x6b, 0x7b, 0x9d, 0xdd, 0xcb, 0x2d, 0xa3, 0x33, 0xa0, 0xb8, 0x44, 0x18, 0x39, 0x1c, 0xff, 0x8c,
	0x0e, 0xcb, 0xb2, 0x84, 0x3d, 0x04, 0xa1, 0xca, 0xa4, 0x21, 0x1b, 0x6d, 0xaf, 0xb3, 0x75, 0x89,
	0xfa, 0xbd, 0x8b, 0xfe, 0xc5, 0xf9, 0x9b, 0xde, 0xc5, 0x80, 0x96, 0xf3, 0xdf, 0xb0, 0x87, 0xab,
	0x9c, 0x86, 0xdf, 0xa0, 0xd6, 0x53, 0x7d, 0xca, 0x1f, 0x81, 0x6c, 0x5a, 0xf9, 0xf6, 0xe0, 0xb4,
	0xe7, 0xfb, 0x6b, 0x85, 0x6f, 0xd8, 0xc3, 0x47, 0xfe, 0x08, 0xf8, 0x14, 0x35, 0x43, 0xa1, 0xb2,
	0xe8, 0x0b, 0x33, 0xe1, 0x5d, 0x00, 0x32, 0x9a, 0x29, 0x2e, 0x0d, 0xd9, 0x6a, 0x7b, 0x9d, 0xca,
	0xe5, 0x0b, 0x8a, 0x57, 0xe0, 0xa8, 0xc0, 0xf0, 0x2b, 0x54, 0x2f, 0x49, 0x66, 0x4a, 0x1b, 0xb2,
	0x6d, 0xcb, 0x6c, 0xf6, 0xfb, 0x67, 0xb4, 0xb6, 0xc2, 0x6e, 0x95, 0x36, 0x78, 0x80, 0x5a, 0xa1,
	0x12, 0x02, 0xc2, 0x27, 0x83, 0xed, 0x38, 0xc9, 0x20, 0xef, 0x6b, 0x45, 0x28, 0x0d, 0xd4, 0x7c,
	0x22, 0xb3, 0xf3, 0xbc, 0xb4, 0xaa, 0x97, 0x83, 0x5e, 0xbf, 0xf7, 0xf6, 0xad, 0x4f, 0x0f, 0xd6,
	0x94, 0x76, 0xa0, 0xd7, 0xa8, 0x1e, 0x2a, 0x29, 0x21, 0x34, 0x81, 0xe1, 0x09, 0xa8, 0xcc, 0x90,
	0x5d, 0x2b, 0xda, 0x3a, 0xf7, 0x7d, 0x9f, 0xd6, 0x0a, 0x70, 0xec, 0x30, 0x7c, 0x8a, 0x0e, 0xdc,
	0x19, 0x05, 0xa1, 0xd2, 0x10, 0x44, 0x59, 0x32, 0x4b, 0x49, 0xc5, 0x9e, 0xd6, 0x76, 0xcc, 0x44,
	0x0a, 0xb4, 0xee, 0xf0, 0x2b, 0xa5, 0x61, 0x98, 0xa3, 0xb9, 0x24, 0x66, 0x5c, 0x04, 0x3c, 0x0e,
	0xcc, 0x9d, 0x56, 0xc6, 0xe4, 0x07, 0x8c, 0xd6, 0x24, 0x39, 0xfe, 0x5b, 0x3c, 0x5e, 0xa0, 0xf8,
	0x04, 0x35, 0x0a, 0x4f, 0xad, 0x56, 0xbc, 0x57, 0xac, 0xb8, 0x5e, 0x20, 0xcb, 0xfd, 0xfe, 0x80,
	0xaa, 0x0b, 0xb2, 0x5d, 0x6e, 0x75, 0xb5, 0xdc, 0xbd, 0x02, 0xb0, 0x9b, 0xfd, 0x0e, 0x55, 0x84,
	0x9a, 0x06, 0x02, 0xee, 0x41, 0x90, 0x7d, 0x9b, 0x6d, 0x8b, 0xcb, 0x58, 0xd1, 0x5d, 0xa1, 0xa6,
	0xd7, 0x79, 0x14, 0x9f, 0xa0, 0xba, 0xdb, 0xb8, 0x9d, 0x99, 0x2b, 0x99, 0x92, 0x9a, 0xcd, 0xb6,
	0xd1, 0xeb, 0xd3, 0x5a, 0x92, 0x2f, 0x7b, 0x89, 0xe0, 0x73, 0xd4, 0x74, 0x37, 0x22, 0x0d, 0xca,
	0x17, 0xab, 0x6e, 0x33, 0x6f, 0xa7, 0x77, 0x4c, 0x47, 0x14, 0x17, 0x8c, 0x5f, 0x57, 0x04, 0xfc,
	0x1a, 0xed, 0x2f, 0x74, 0xae, 0x97, 0x86, 0x55, 0xec, 0x46, 0x60, 0x18, 0x17, 0x10, 0xd1, 0x6a,
	0x01, 0xbb, 0x9e, 0xae, 0xd0, 0xc1, 0x82, 0x2e, 0x59, 0x02, 0xe9, 0x8c, 0x85, 0x40, 0x0e, 0xac,
	0xe4, 0xe8, 0xf7, 0x62, 0x3c, 0xad, 0xa2, 0x2c, 0x04, 0x7d, 0xcd, 0x27, 0x9a, 0xe9, 0x39, 0x6d,
	0x14, 0x82, 0x3f, 0x16, 0xfc, 0xdc, 0xef, 0x8b, 0x24, 0xd9, 0x4c, 0x28, 0x16, 0x05, 0x11, 0x08,
	0x36, 0x27, 0xd8, 0xf9, 0x3d, 0x3f, 0x6a, 0x7f, 0xd9, 0xec, 0x27, 0xcb, 0x18, 0xe6, 0x04, 0xfc,
	0x13, 0xaa, 0x27, 0x5c, 0xae, 0x6d, 0xa4, 0x69, 0x35, 0xde, 0x29, 0xad, 0x25, 0x5c, 0x96, 0x17,
	0x72, 0x8c, 0x90, 0x66, 0x06, 0x02, 0xc1, 0x13, 0x6e, 0x48, 0xcb, 0x1d, 0xc3, 0xe9, 0xc0, 0xa7,
	0x95, 0x3c, 0x7c, 0x9d, 0x47, 0xf1, 0x3b, 0x44, 0x34, 0x84, 0x4a, 0x47, 0xd6, 0xa3, 0x93, 0x2c,
	0x8e, 0x41, 0x43, 0x64, 0xad, 0x47, 0x0e, 0x0b, 0x85, 0xef, 0xd3, 0x43, 0x47, 0xba, 0x61, 0x0f,
	0xef, 0x0b, 0x4a, 0x6e, 0x40, 0xfc, 0x3d, 0x42, 0x85, 0xda, 0x18, 0x41, 0x8e, 0x5c, 0xf3, 0x67,
	0xb6, 0xf9, 0x8a, 0x03, 0xc6, 0x46, 0x60, 0x82, 0x76, 0x34, 0x4c, 0xb9, 0x92, 0xe4, 0xab, 0xc2,
	0x33, 0xc5, 0x7f, 0x6e, 0x76, 0x0d, 0xff, 0x64, 0x90, 0xae, 0xcc, 0x4e, 0xca, 0x66, 0x2f, 0xc0,
	0x85, 0xd9, 0xcf, 0x10, 0xbe, 0x07, 0xcd, 0xe3, 0x79, 0x10, 0x82, 0x36, 0x3c, 0xe6, 0x21, 0x33,
	0x40, 0xbe, 0x2e, 0xbd, 0x4d, 0x07, 0x0e, 0xbf, 0x5a, 0xc1, 0x78, 0x82, 0xf6, 0xcd, 0x9d, 0x06,
	0x16, 0x05, 0xee, 0x4d, 0x27, 0xdf, 0xb4, 0xbd, 0x4e, 0xad, 0xe7, 0x3f, 0xff, 0x52, 0xae, 0xbd,
	0xb7, 0xdd, 0xb1, 0x15, 0xba, 0xd8, 0xe5, 0xde, 0xed, 0x88, 0x06, 0x74, 0xf4, 0xe7, 0xa7, 0xd1,
	0xc7, 0x31, 0xad, 0x9a, 0x12, 0x84, 0x5f, 0xa1, 0x46, 0x51, 0x63, 0xa6, 0x94, 0x70, 0x57, 0xfd,
	0xdb, 0xb6, 0xd7, 0xd9, 0xbf, 0xdc, 0x38, 0xef, 0xd3, 0x9a, 0xc3, 0x6e, 0x95, 0x12, 0xf9, 0x15,
	0x3f, 0x3e, 0x41, 0xd5, 0x72, 0x62, 0x5c, 0x47, 0xe5, 0xd4, 0x8d, 0x17, 0x18, 0xa1, 0x9d, 0xdb,
	0x0f, 0x1f, 0xae, 0x47, 0xc3, 0x86, 0xf7, 0xfe, 0x1d, 0xf2, 0x43, 0x95, 0x74, 0x59, 0xc2, 0x1e,
	0x95, 0xcc, 0x5b, 0x4e, 0x41, 0xdf, 0xf3, 0x10, 0xd6, 0x7a, 0xb7, 0x6e, 0x5b, 0x0e, 0xf1, 0xd7,
	0x6e, 0xa8, 0x64, 0x9a, 0x25, 0xa0, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x20, 0x51, 0x6b, 0xb0,
	0xc8, 0x06, 0x00, 0x00,
}
